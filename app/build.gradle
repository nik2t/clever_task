import java.nio.file.Files
import java.nio.file.Paths

import static sun.security.util.Debug.println

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {

    id 'java'
    id 'io.franzbecker.gradle-lombok' version '1.14'
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id 'application'
}

repositories {
    mavenCentral()

}

lombok {
    version = '1.18.4'
    sha256 = ""
}

dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:Cairo-SR7'
    }
}

build {
    dependsOn "downloadCheck"
}


dependencies {

    testImplementation 'junit:junit'
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation group: 'com.github.livesense', name: 'org.liveSense.fragment.sun.security', version: '1.0.5'

}

application {

    mainClass = 'ru.clevertec.CheckRunner'
}

jar {
    manifest{
        attributes 'Main-Class': 'ru.clevertec.CheckRunner'
    }
}

//print versions from BOM
task managedVersions {
    doLast {
        dependencyManagement.managedVersions.each {
            println it
        }
    }
}

sourceSets{
    main{
        java{
            srcDirs = ['src/main/java']
        }
    }
}

class SourcesDownloader implements Plugin<Project>{

    @Override
    void apply(Project project) {
        project.task("downloadCheck") {
            description 'Download from the repository of the old check.'

            URL sourceUrl = new URL("https://raw.githubusercontent.com/nik2t/testCheck/main/check.txt")
            String file = "E:\\task\\app\\resources\\oldCheck.txt"

            try (InputStream input = sourceUrl.openStream()) {Files.copy(input, new File(file).toPath())}
            catch (Exception e) {
                println e
            }

        }
    }
}


apply plugin: SourcesDownloader

